name: "Percy screenshots"

on:
  workflow_run:
    workflows:
      - "Prepare Percy build"
    types:
      - completed

jobs:
  upload:
    name: Build project with proposed changes & take Percy snapshots
    if: github.event.workflow_run.conclusion=='success'
    runs-on: ubuntu-latest
    outputs:
      pr_head_sha: ${{ steps.get_pr_data.outputs.sha }}
      pr_number: ${{ steps.get_pr_data.outputs.pr }}
      percy_build_link: ${{ steps.percy_snapshot.outputs.build_link }}
      percy_org_id: ${{ steps.percy_snapshot.outputs.org_id }}
      percy_build_id: ${{ steps.percy_snapshot.outputs.build_id }}
      percy_build_state: ${{ steps.percy_build_results.outputs.build_state }}
      percy_num_snapshots: ${{ steps.percy_build_results.outputs.num_snapshots }}
      percy_review_state: ${{ steps.percy_build_results.outputs.review_state }}
      percy_review_state_reason: ${{ steps.percy_build_results.outputs.review_state_reason }}
    steps:
      - name: Checkout SCM
        uses: actions/checkout@v4

      - name: Remove SCM files that will be replaced by artifact files
        run: rm -rf scss/ templates/docs/examples/

      - name: Download artifact from workflow run
        uses: actions/download-artifact@v4
        with:
          name: "web-artifact-${{ github.event.workflow_run.id }}"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.workflow_run.repository.full_name }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Get PR data
        if: github.event.workflow_run.event=='pull_request'
        id: get_pr_data
        run: |
          set -e
          echo "sha=$(cat pr_head_sha.txt)" >> $GITHUB_OUTPUT
          echo "pr=$(cat pr_num.txt)" >> $GITHUB_OUTPUT

      - name: Move artifact files into place to replace SCM
        run: |
          set -e
          mv examples/ templates/docs/.

      - name: Take snapshots & upload to Percy
        id: percy_snapshot
        uses: './.github/workflows/percy-snapshot'
        with:
          branch_name: "pull/${{ steps.get_pr_data.outputs.pr }}"
          commitsh: ${{ steps.get_pr_data.outputs.sha }}
          percy_token_write: ${{ secrets.PERCY_TOKEN_WRITE }}

      - name: Wait for Percy build to complete
        run: npx percy build:wait --build ${{ steps.percy_snapshot.outputs.build_id }}
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_READ }}

      # See endpoint docn: https://www.browserstack.com/docs/percy/api-reference/builds#get-build-details
      - name: Get Percy build results
        id: percy_build_results
        run: |
          # Fetch Percy build details
          response=$(curl --request GET \
          	--url https://percy.io/api/v1/builds/${{ steps.percy_snapshot.outputs.build_id }} \
            --header "Authorization: Token ${{ secrets.PERCY_TOKEN_READ }}"
          )
          
          # Extract attributes of build and remove quotes
          build_state=$(echo $response | jq '.data.attributes."state"' | tr -d '"')
          review_state=$(echo $response | jq '.data.attributes."review-state"' | tr -d '"')
          review_state_reason=$(echo $response | jq '.data.attributes."review-state-reason"' | tr -d '"')
          num_snapshots=$(echo $response | jq '.data.attributes."total-snapshots"' | tr -d '"')

          echo "build state $build_state"
          echo "review_state $review_state"
          echo "review_state_reason $review_state_reason"
          echo "num_snapshots $num_snapshots"

          echo "build_state=$build_state" >> $GITHUB_OUTPUT
          echo "review_state=$review_state" >> $GITHUB_OUTPUT
          echo "review_state_reason=$review_state_reason" >> $GITHUB_OUTPUT
          echo "num_snapshots=$num_snapshots" >> $GITHUB_OUTPUT

          if [ "$review_state" != "approved" ]; then
            echo "Percy diffs were detected."
            exit 1
          fi

      - name: Create successful Percy status check
        if: github.event.workflow_run.event=='pull_request'
        id: create_percy_final_status_check
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/check-runs
          owner: octokit
          repo: request-action
          name: "percy_upload"
          head_sha: ${{ steps.get_pr_data.outputs.sha }}
          status: completed
          conclusion: success
          details_url: ${{ steps.percy_snapshot.outputs.build_link }}
          output: |
            title: "Percy build"
            summary: "Percy build #${{ steps.percy_snapshot.outputs.build_id }} completed: ${{ steps.percy_build_results.outputs.review_state }}"
            text: |
              Percy build was finished at ${{ steps.percy_snapshot.outputs.build_link }}
              Build is associated with PR https://github.com/${{github.repository}}/pull/${{ steps.get_pr_data.outputs.pr }}
              There were ${{ steps.percy_build_results.outputs.num_snapshots }} total snapshot(s) taken.
              The review state reason is: ${{ steps.percy_build_results.outputs.review_state_reason }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  failure_cleanup:
    name: Cleanup & report failure
    runs-on: ubuntu-latest
    needs: upload
    if: ${{ failure() }}
    steps:
      - name: Create failure Percy status check
        if: ${{ github.event.workflow_run.event=='pull_request' }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/check-runs
          owner: octokit
          repo: request-action
          name: "percy_upload"
          head_sha: ${{ needs.upload.outputs.pr_head_sha }}
          status: completed
          conclusion: failure
          details_url: ${{ needs.upload.outputs.percy_build_link  }}
          output: |
            title: "Percy build"
            summary: "Percy build failed: ${{ needs.upload.outputs.percy_review_state || 'Unknown review state' }}"
            text: |
              Percy build failed or did not start.
              Build is associated with PR https://github.com/${{ github.repository }}/pull/${{ needs.upload.outputs.pr_number }}
              The review state reason is: ${{ needs.upload.outputs.percy_review_state_reason }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
